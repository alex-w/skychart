#
#   Makefile.fpc for Skychart
#

[package]
name=skychart
version=3

[target]
dirs=component library
programs=cdc cdcicon catgen

[require]
libc=y
packages=rtl

[compiler]
unittargetdir=units/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)
includedir=./
options= $(opt_target) $(fpcopts) -CF64 -dWithUpdateMenu -dUseCThreads -dLCL -dLCL$(LCL_PLATFORM) -MObjFPC -Sgi -vewni -l
unitdir=library/catalog/lib/$(CPU_TARGET)-$(OS_TARGET)/  component/uniqueinstance/lib/$(CPU_TARGET)-$(OS_TARGET)/ component/jdcalendar/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/downloaddialog/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/bgrabitmap/lib/$(CPU_TARGET)-$(OS_TARGET) component/enhedits/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/libsql/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/mrecsort/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/multiframe/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/radec/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/zoomimage/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/indiclient/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/vo/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/vosamp/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/synapse/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ component/xmlparser/lib/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)/ $(LAZDIR)/components/turbopower_ipro/units/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/components/printers/lib/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/components/cairocanvas/lib/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/lcl/units/$(CPU_TARGET)-$(OS_TARGET)/ $(LAZDIR)/lcl/units/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/packager/units/$(CPU_TARGET)-$(OS_TARGET)/ $(LAZDIR)/components/synedit/units/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/components/PascalScript/Source/lib/$(CPU_TARGET)-$(OS_TARGET) $(LAZDIR)/components/lazcontrols/lib/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM)/ $(LAZDIR)/components/lazutils/lib/$(CPU_TARGET)-$(OS_TARGET) $(LAZDIR)/components/freetype/lib/$(CPU_TARGET)-$(OS_TARGET) $(LAZDIR)/ideintf/units/$(CPU_TARGET)-$(OS_TARGET)/$(LCL_PLATFORM) ./

[clean]
files=$(wildcard $(COMPILER_UNITTARGETDIR)/*$(OEXT)) \
      $(wildcard $(COMPILER_UNITTARGETDIR)/*$(PPUEXT)) \
      $(wildcard $(COMPILER_UNITTARGETDIR)/*$(RSTEXT)) \
      $(wildcard $(COMPILER_UNITTARGETDIR)/*.compiled) \
      $(wildcard *$(OEXT)) $(wildcard *$(PPUEXT)) $(wildcard *$(RSTEXT)) \

[prerules]
LAZDIR=%LAZDIR%
# Compiler options
ifndef fpcopts 
ifeq ($(CPU_TARGET),aarch64)
fpcopts=-O-  -CX -XX -Xs 
else
fpcopts=-O3  -CX -XX -Xs 
endif
endif
# LCL Platform
ifndef LCL_PLATFORM
ifeq ($(OS_TARGET),win32)
LCL_PLATFORM=win32
opt_target= -WG
else
ifeq ($(OS_TARGET),win64)
LCL_PLATFORM=win32
opt_target= -WG
else
ifeq ($(OS_TARGET),darwin)
ifeq ($(CPU_TARGET),i386)
LCL_PLATFORM=carbon
else
LCL_PLATFORM=cocoa
endif
ifeq ($(CPU_TARGET),aarch64)
opt_target= -k-macos_version_min -k11.0 -k-framework -kCocoa -k-weak_framework -kUserNotifications
else
opt_target= -k-macosx_version_min -k10.10
endif
else
LCL_PLATFORM=qt5
opt_target=-k--build-id
endif
endif
endif
endif
export LCL_PLATFORM

[rules]
.PHONY: all

outdir:
	mkdir -p units/$(CPU_TARGET)-$(OS_TARGET)-$(LCL_PLATFORM)

all: outdir component_all library_all cdc$(EXEEXT) cdcicon$(EXEEXT) catgen$(EXEEXT)

revision:
	$(LAZDIR)/tools/svn2revisioninc . revision.inc

